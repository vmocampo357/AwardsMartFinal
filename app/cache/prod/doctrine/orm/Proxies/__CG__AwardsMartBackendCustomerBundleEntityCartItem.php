<?php

namespace Proxies\__CG__\AwardsMartBackend\CustomerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CartItem extends \AwardsMartBackend\CustomerBundle\Entity\CartItem implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'id', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'quantity', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'subtotal', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'addonTotal', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'engraving', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'cart', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'product', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'option', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'addonOptions', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'size', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'chosenPrice', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'uploads'];
        }

        return ['__isInitialized__', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'id', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'quantity', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'subtotal', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'addonTotal', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'engraving', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'cart', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'product', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'option', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'addonOptions', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'size', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'chosenPrice', '' . "\0" . 'AwardsMartBackend\\CustomerBundle\\Entity\\CartItem' . "\0" . 'uploads'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CartItem $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getEngraving()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEngraving', []);

        return parent::getEngraving();
    }

    /**
     * {@inheritDoc}
     */
    public function setEngraving($engraving)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEngraving', [$engraving]);

        return parent::setEngraving($engraving);
    }

    /**
     * {@inheritDoc}
     */
    public function addUpload(\AwardsMartBackend\CustomerBundle\Entity\CartItemUpload $upload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpload', [$upload]);

        return parent::addUpload($upload);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload(\AwardsMartBackend\CustomerBundle\Entity\CartItemUpload $upload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', [$upload]);

        return parent::removeUpload($upload);
    }

    /**
     * {@inheritDoc}
     */
    public function getUploads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploads', []);

        return parent::getUploads();
    }

    /**
     * {@inheritDoc}
     */
    public function addAddonOption(\AwardsMartBackend\ProductsBundle\Entity\ProductAddonOption $option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAddonOption', [$option]);

        return parent::addAddonOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAddonOption(\AwardsMartBackend\ProductsBundle\Entity\ProductAddonOption $option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAddonOption', [$option]);

        return parent::removeAddonOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddonOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddonOptions', []);

        return parent::getAddonOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getCart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCart', []);

        return parent::getCart();
    }

    /**
     * {@inheritDoc}
     */
    public function setCart($cart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCart', [$cart]);

        return parent::setCart($cart);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCart', []);

        return parent::removeCart();
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$product]);

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getOption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOption', []);

        return parent::getOption();
    }

    /**
     * {@inheritDoc}
     */
    public function setOption($option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOption', [$option]);

        return parent::setOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function getSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSize', []);

        return parent::getSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setSize($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSize', [$size]);

        return parent::setSize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtotal($subtotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtotal', [$subtotal]);

        return parent::setSubtotal($subtotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtotal', []);

        return parent::getSubtotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddonTotal($addonTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddonTotal', [$addonTotal]);

        return parent::setAddonTotal($addonTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddonTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddonTotal', []);

        return parent::getAddonTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function containsAddonOption($option_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'containsAddonOption', [$option_id]);

        return parent::containsAddonOption($option_id);
    }

    /**
     * {@inheritDoc}
     */
    public function clearAddons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearAddons', []);

        return parent::clearAddons();
    }

    /**
     * {@inheritDoc}
     */
    public function getChosenPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChosenPrice', []);

        return parent::getChosenPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getNamesUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNamesUpload', []);

        return parent::getNamesUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoUpload', []);

        return parent::getLogoUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function getOtherUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtherUpload', []);

        return parent::getOtherUpload();
    }

}
